package be.howest.sooa.o10.gui;

import be.howest.sooa.o10.data.Page;
import be.howest.sooa.o10.domain.Pokemon;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.util.List;
import javax.swing.JPanel;

/**
 *
 * @author Hayk
 */
public class PokemonSelectorDialog extends javax.swing.JDialog {

    private final MainFrame parent;
    private Page<Pokemon> page;
    private List<Pokemon> pokemons;

    public PokemonSelectorDialog(MainFrame parent) {
        super(parent, true);
        this.parent = parent;
        initComponents();
        addListeners();
    }

    // <editor-fold defaultstate="collapsed" desc="Listeners">
    private void addListeners() {
        addCloseButtonActionListener();
        addNextPageButtonActionListener();
        addPreviousPageButtonActionListener();
        addWithImageCheckBoxListener();
    }

    private void addCloseButtonActionListener() {
        closeButton.addActionListener((ActionEvent e) -> {
            setVisible(false);
        });
    }

    private void addNextPageButtonActionListener() {
        nextPageButton.addActionListener((ActionEvent e) -> {
            loadNextPage();
        });
    }

    private void addPreviousPageButtonActionListener() {
        previousPageButton.addActionListener((ActionEvent e) -> {
            loadPreviousPage();
        });
    }

    private void addWithImageCheckBoxListener() {
        withImageCheckBox.addItemListener((ItemEvent e) -> {
            page = null;
            parent.findAllPokemons(e.getStateChange() == ItemEvent.SELECTED);
        });
    }

    private void addPokemonImageButtonActionListener(PokemonImageButton imageButton) {
        imageButton.addActionListener((ActionEvent e) -> {
            parent.selectPokemon(imageButton.getPokemon());
            setVisible(false);
        });
    }

    @Override
    public void setVisible(boolean visible) {
        super.setVisible(visible);
        if (!visible) {
            dispose();
        }
    }

    // </editor-fold>
    //
    // <editor-fold defaultstate="collapsed" desc="Page Manipulation">
    void loadFirstPage(List<Pokemon> pokemons) {
        this.pokemons = pokemons;
        loadNextPage();
    }

    private void loadNextPage() {
        if (page == null) {
            page = new Page<>();
        } else {
            page.nextPage();
        }
        loadPage();
    }

    private void loadPreviousPage() {
        page.previousPage();
        loadPage();
    }

    private void loadPage() {
        boolean lastPage = false;
        int start = page.getCurrentPage() * page.getPerPage();
        int end = start + page.getPerPage();
        for (int i = start; i < end; i++) {
            lastPage = i == pokemons.size() - 1;
            if (i < pokemons.size()) {
                page.add(pokemons.get(i));
            }
        }
        lastPage = lastPage || !page.isFull();
        page.setLastPage(lastPage);
        togglePageButtons();
        fillButtonIcons();
    }

    private void togglePageButtons() {
        previousPageButton.setEnabled(!page.isFirstPage());
        nextPageButton.setEnabled(!page.isLastPage());
    }

    private void fillButtonIcons() {
        Component[] imageWindow = imagePageContainer.getComponents();
        for (int i = 0; i < imageWindow.length; i++) {
            JPanel imagePanel = (JPanel) imageWindow[i];
            imagePanel.removeAll();
            if (i < page.size()) {
                Pokemon pokemon = page.getAt(i);
                PokemonImageButton imageButton
                        = new PokemonImageButton(pokemon, (JPanel) imageWindow[i]);
                imagePanel.add(imageButton);
                addPokemonImageButtonActionListener(imageButton);
            }
            imagePanel.repaint();
        }
    }

    // </editor-fold>
    //
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        withImageCheckBox = new javax.swing.JCheckBox();
        scrollPanel = new javax.swing.JPanel();
        previousPageButton = new javax.swing.JButton();
        nextPageButton = new javax.swing.JButton();
        imagePageContainer = new javax.swing.JPanel();
        imageWindow1 = new javax.swing.JPanel();
        imageWindow2 = new javax.swing.JPanel();
        imageWindow3 = new javax.swing.JPanel();
        imageWindow4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pokemon Selector");
        setResizable(false);

        closeButton.setText("Close");

        withImageCheckBox.setText("Only with image");

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(withImageCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 688, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(withImageCheckBox))
                .addContainerGap())
        );

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        scrollPanel.setLayout(new java.awt.BorderLayout());

        previousPageButton.setText("‹ Prev 4");
        scrollPanel.add(previousPageButton, java.awt.BorderLayout.LINE_START);

        nextPageButton.setText("Next 4 ›");
        scrollPanel.add(nextPageButton, java.awt.BorderLayout.LINE_END);

        javax.swing.GroupLayout imageWindow1Layout = new javax.swing.GroupLayout(imageWindow1);
        imageWindow1.setLayout(imageWindow1Layout);
        imageWindow1Layout.setHorizontalGroup(
            imageWindow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );
        imageWindow1Layout.setVerticalGroup(
            imageWindow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );

        imagePageContainer.add(imageWindow1);

        javax.swing.GroupLayout imageWindow2Layout = new javax.swing.GroupLayout(imageWindow2);
        imageWindow2.setLayout(imageWindow2Layout);
        imageWindow2Layout.setHorizontalGroup(
            imageWindow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );
        imageWindow2Layout.setVerticalGroup(
            imageWindow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );

        imagePageContainer.add(imageWindow2);

        javax.swing.GroupLayout imageWindow3Layout = new javax.swing.GroupLayout(imageWindow3);
        imageWindow3.setLayout(imageWindow3Layout);
        imageWindow3Layout.setHorizontalGroup(
            imageWindow3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );
        imageWindow3Layout.setVerticalGroup(
            imageWindow3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );

        imagePageContainer.add(imageWindow3);

        javax.swing.GroupLayout imageWindow4Layout = new javax.swing.GroupLayout(imageWindow4);
        imageWindow4.setLayout(imageWindow4Layout);
        imageWindow4Layout.setHorizontalGroup(
            imageWindow4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );
        imageWindow4Layout.setVerticalGroup(
            imageWindow4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );

        imagePageContainer.add(imageWindow4);

        scrollPanel.add(imagePageContainer, java.awt.BorderLayout.CENTER);

        getContentPane().add(scrollPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel imagePageContainer;
    private javax.swing.JPanel imageWindow1;
    private javax.swing.JPanel imageWindow2;
    private javax.swing.JPanel imageWindow3;
    private javax.swing.JPanel imageWindow4;
    private javax.swing.JButton nextPageButton;
    private javax.swing.JButton previousPageButton;
    private javax.swing.JPanel scrollPanel;
    private javax.swing.JCheckBox withImageCheckBox;
    // End of variables declaration//GEN-END:variables
}
